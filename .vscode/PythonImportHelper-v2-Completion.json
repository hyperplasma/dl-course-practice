[
    {
        "label": "numpy",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "numpy",
        "description": "numpy",
        "detail": "numpy",
        "documentation": {}
    },
    {
        "label": "torch",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "torch",
        "description": "torch",
        "detail": "torch",
        "documentation": {}
    },
    {
        "label": "torch.nn",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "torch.nn",
        "description": "torch.nn",
        "detail": "torch.nn",
        "documentation": {}
    },
    {
        "label": "torchvision",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "torchvision",
        "description": "torchvision",
        "detail": "torchvision",
        "documentation": {}
    },
    {
        "label": "matplotlib.pyplot",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "matplotlib.pyplot",
        "description": "matplotlib.pyplot",
        "detail": "matplotlib.pyplot",
        "documentation": {}
    },
    {
        "label": "torchvision.models.segmentation",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "torchvision.models.segmentation",
        "description": "torchvision.models.segmentation",
        "detail": "torchvision.models.segmentation",
        "documentation": {}
    },
    {
        "label": "Dataset",
        "importPath": "torch.utils.data",
        "description": "torch.utils.data",
        "isExtraImport": true,
        "detail": "torch.utils.data",
        "documentation": {}
    },
    {
        "label": "DataLoader",
        "importPath": "torch.utils.data",
        "description": "torch.utils.data",
        "isExtraImport": true,
        "detail": "torch.utils.data",
        "documentation": {}
    },
    {
        "label": "DataLoader",
        "importPath": "torch.utils.data",
        "description": "torch.utils.data",
        "isExtraImport": true,
        "detail": "torch.utils.data",
        "documentation": {}
    },
    {
        "label": "glob",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "glob",
        "description": "glob",
        "detail": "glob",
        "documentation": {}
    },
    {
        "label": "os.path",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os.path",
        "description": "os.path",
        "detail": "os.path",
        "documentation": {}
    },
    {
        "label": "cv2",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "cv2",
        "description": "cv2",
        "detail": "cv2",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "albumentations",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "albumentations",
        "description": "albumentations",
        "detail": "albumentations",
        "documentation": {}
    },
    {
        "label": "SkinDataset",
        "importPath": "skin_dataset",
        "description": "skin_dataset",
        "isExtraImport": true,
        "detail": "skin_dataset",
        "documentation": {}
    },
    {
        "label": "get_fcn_resnet50",
        "kind": 2,
        "importPath": "dl_2_isic_seg.models",
        "description": "dl_2_isic_seg.models",
        "peekOfCode": "def get_fcn_resnet50(num_classes=2, pretrained=False):\n    model = seg.fcn_resnet50(pretrained=pretrained)\n    # 修改模型输出层\n    model.classifier[-1] = torch.nn.Conv2d(model.classifier[-1].in_channels, num_classes, kernel_size=(1, 1))\n    model.aux_classifier = None\n    return model\nif __name__ == '__main__':\n    model = get_fcn_resnet50(num_classes=10)\n    model.eval()\n    # 输入(3, 224, 224)，输出(10, 224, 224)",
        "detail": "dl_2_isic_seg.models",
        "documentation": {}
    },
    {
        "label": "SkinDataset",
        "kind": 6,
        "importPath": "dl_2_isic_seg.skin_dataset",
        "description": "dl_2_isic_seg.skin_dataset",
        "peekOfCode": "class SkinDataset(Dataset):\n    def __init__(self, data_root, subset=\"train\", transform=None):\n        self.transform = transform\n        im_root = \"\"\n        mask_root = \"\"\n        if subset == \"train\":\n            im_root = osp.join(data_root, \"ISBI2016_ISIC_Part1_Training_Data\")\n            mask_root = osp.join(data_root, \"ISBI2016_ISIC_Part1_Training_GroundTruth\")\n        else:\n            im_root = osp.join(data_root, \"ISBI2016_ISIC_Part1_Test_Data\")",
        "detail": "dl_2_isic_seg.skin_dataset",
        "documentation": {}
    }
]